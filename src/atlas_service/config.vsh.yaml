name: "atlas_service"
description: "A pipeline to process and annotate gene expression data."
authors:
  - __merge__: /src/authors/dorien_roosen.yaml
    roles: [ author, maintainer ]
  - __merge__: /src/authors/weiwei_schultz.yaml
    roles: [ contributor ]

argument_groups:
  - name: Input (query) data arguments
    description: The input query dataset(s) to be annotated
    arguments:
      - name: "--id"
        required: true
        type: string
        description: ID of the sample.
        example: foo
      - name: "--input"
        required: true
        type: file
        description: Input query dataset(s) to be annotated
        example: input.h5mu
      - name: "--modality"
        default: "rna"
        type: string
        description: Modality to be processed. Should match the modality in the --reference dataset, if provided.
      - name: "--input_layer"
        type: string
        description: "The layer in the input data containing the raw counts, if .X is not to be used."
        required: false
      - name: "--input_var_gene_names"
        type: string
        required: false
        description: |
          The name of the adata var column containing gene names; when no gene_name_layer is provided, the var index will be used.
  
  - name: Reference data arguments
    description: Dataset to be used as a reference for label transfer and to train annotation algorithms on.
    arguments:
      - name: "--reference"
        type: file
        required: false
        description: |
          The reference dataset to be used as a reference mapper and to train annotation algorithms on.
        # example: https://zenodo.org/records/7587774/files/TS_Lung_filtered.h5ad
      - name: "--reference_layer_raw_counts"
        type: string
        description: "The layer in the reference dataset containing the raw counts, if .X is not to be used."
        required: false
      - name: "--reference_layer_lognormalized_counts"
        type: string
        default: log_normalized
        description: "The layer in the reference dataset containing the log-normalized counts."
      - name: "--reference_var_gene_names"
        type: string
        required: false
        description: |
          The name of the adata .var column containing gene names if the .var index is not to be used.
      - name: "--reference_obs_batch"
        type: string
        required: false 
        description: |
          The .obs column of the reference dataset containing the batch information.
      - name: "--reference_obs_label"
        type: string
        example: cell_type
        required: false
        description: The `.obs` key of the target labels to tranfer.

  - name: Annotation methods
    description: The available annotation methods to annotate the query dataset(s) with.
    arguments:
      - name: "--annotation_methods"
        type: string
        multiple: true
        default: scgpt_annotation
        choices: [harmony_knn, scgpt_annotation]
        example: harmony_knn
        
  - name: "Pre-processing options: RNA filtering"
    description: Pre-processing options for filtering RNA data
    arguments:
      - name: "--rna_min_counts"
        example: 200
        type: integer
        description: Minimum number of counts captured per cell.
      - name: "--rna_max_counts"
        example: 5000000
        type: integer
        description: Maximum number of counts captured per cell.
      - name: "--rna_min_genes_per_cell"
        type: integer
        example: 200
        description: Minimum of non-zero values per cell.
      - name: "--rna_max_genes_per_cell"
        example: 1500000
        type: integer
        description: Maximum of non-zero values per cell.
      - name: "--rna_min_cells_per_gene"
        example: 3
        type: integer
        description: Minimum of non-zero values per gene.
      - name: "--rna_min_fraction_mito"
        example: 0
        type: double
        description: Minimum fraction of UMIs that are mitochondrial.
      - name: "--rna_max_fraction_mito"
        type: double
        example: 0.2
        description: Maximum fraction of UMIs that are mitochondrial.

  - name: "Pre-processing options: Highly variable features detection"
    description: Pre-processing options for detecting highly variable features
    arguments:
      - name: "--top_n_vars"
        type: integer
        description: |
          Number of top vars to be used to calculate cumulative proportions.
          If not specified, proportions are not calculated. `--top_n_vars 20,50` finds
          cumulative proportion to the 20th and 50th most expressed vars.
        multiple: true
        multiple_sep: ','
        required: false
        default: [50, 100, 200, 500]
      - name: "--highly_variable_features_var_output"
        alternatives: ["--filter_with_hvg_var_output"]
        required: false
        type: string
        default: "filter_with_hvg"
        description: In which .var slot to store a boolean array corresponding to the highly variable genes.
      - name: "--highly_variable_features_obs_batch_key"
        alternatives: ["--filter_with_hvg_obs_batch_key"]
        type: string
        default: "sample_id"
        required: false
        description: |
          If specified, highly-variable genes are selected within each batch separately and merged. This simple 
          process avoids the selection of batch-specific genes and acts as a lightweight batch correction method.
  
  - name: "Pre-processing options: Mitochondrial Gene Detection"
    description: Pre-processing options for detecting mitochondrial genes
    arguments:
      - name: "--var_name_mitochondrial_genes"
        type: string
        required: false
        description: |
          In which .var slot to store a boolean array corresponding the mitochondrial genes.
      - name: "--obs_name_mitochondrial_fraction"
        type: string
        required: false
        description: |
          When specified, write the fraction of counts originating from mitochondrial genes 
          (based on --mitochondrial_gene_regex) to an .obs column with the specified name.
          Requires --var_name_mitochondrial_genes.
      - name: --mitochondrial_gene_regex
        type: string
        description: |
          Regex string that identifies mitochondrial genes from --var_gene_names.
          By default will detect human and mouse mitochondrial genes from a gene symbol.
        required: false
        default: "^[mM][tT]-"

  - name: "Pre-processing options: QC metrics calculation options"
    description: Pre-processing options for calculating QC metrics
    arguments:
      - name: "--var_qc_metrics"
        description: |
          Keys to select a boolean (containing only True or False) column from .var.
          For each cell, calculate the proportion of total values for genes which are labeled 'True', 
          compared to the total sum of the values for all genes. Defaults to the combined values specified for
          --var_name_mitochondrial_genes and --highly_variable_features_var_output.
        type: string
        multiple: True
        multiple_sep: ','
        required: false
        example: "ercc,highly_variable"

  - name: Harmony integration options
    description: Specifications for harmony integration. Only relevant for annotation method 'harmony_knn'.
    arguments:
      - name: "--harmony_theta"
        type: double
        description: |
          Diversity clustering penalty parameter. Specify for each variable in group.by.vars. 
          theta=0 does not encourage any diversity. Larger values of theta
          result in more diverse clusters."
        default: 2
        example: [0, 1, 2]
        multiple: true

  - name: scGPT reference model
    description: scGPT model input, required for scGPT annotation methods
    arguments:
      - name: "--scgpt_model"
        type: file
        required: false
        example: best_model.pt
        description: |
          The model file containing checkpoints and cell type label mapper.
      - name: "--scgpt_model_config"
        type: file
        required: false
        example: args.json
        description: |
          The model configuration file. 
      - name: "--scgpt_model_vocab"
        type: file
        required: false
        example: vocab.json
        description: |
          Model vocabulary file directory.
      - name: "--scgpt_finetuned_checkpoints_key"
        type: string
        default: model_state_dict
        description: |
          Key in the model file containing the pretrained checkpoints.
      - name: "--scgpt_label_mapper_key"
        type: string
        default: id_to_class
        description: |
          Key in the model file containing the cell type class to label mapper dictionary.

  - name: scGPT annotation options
    description: Specifications for scGPT annotation.
    arguments:
      - name: "--scgpt_pad_token"
        type: string
        default: "<pad>"
        required: false
        description: |
          Token used for padding.
      - name: "--scgpt_pad_value"
        type: integer
        default: -2
        required: false
        description: |
          The value of the padding token.
      - name: "--scgpt_n_hvg"
        type: integer
        default: 1200
        description: |
          Number of highly variable genes to consider for scGPT annotation.
      - name: --scgpt_dsbn
        type: boolean
        default: true
        description: |
          Apply domain-specific batch normalization
      - name: "--scgpt_batch_size"
        type: integer
        default: 64
        description: |
          The batch size to be used for embedding inference.
      - name: "--scgpt_n_input_bins"
        type: integer
        default: 51
        required: False
        min: 1
        description: |
          The number of bins to discretize the data into; When no value is provided, data won't be binned.
      - name: "--scgpt_seed"
        type: integer
        required: false
        description: |
          Seed for random number generation used for binning. If not set, no seed is used.

  - name: Outputs
    description: The output file to write the annotated dataset to.
    arguments:
    - name: "--output"
      type: file
      direction: output
      required: true
      description: |
        The output file.
      example: output.h5mu

dependencies:
  - name: metadata/add_id
    repository: op
  - name: dataflow/split_h5mu
    repository: op
  - name: workflows/multiomics/process_samples
    alias: process_samples_workflow
    repository: op
  - name: workflows/annotation/scgpt_annotation
    alias: scgpt_annotation_workflow
    repository: op

repositories:
  - name: op
    type: github
    repo: openpipelines-bio/openpipeline
    tag: 2.0.0

resources:
  - type: nextflow_script
    path: main.nf
    entrypoint: run_wf

runners:
  - type: nextflow